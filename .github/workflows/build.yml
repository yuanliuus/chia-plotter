on:
  push:
    # Sequence of patterns matched against refs/tags
    branches: [master] 
#     tags:
#     - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Upload Release Asset

jobs:
  build-for-Linux:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Build
        id: build
        run: |
          sudo apt install  -y libsodium-dev  libgmp3-dev
          pwd
          cmake --no-warn-unused-cli -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_C_COMPILER:FILEPATH=/usr/bin/gcc-9 -DCMAKE_CXX_COMPILER:FILEPATH=/usr/bin/g++-9 -DCMAKE_SYSTEM_NAME:STRING=Linux -H$GITHUB_WORKSPACE -B$GITHUB_WORKSPACE/build -G "Unix Makefiles"
          cmake --build $GITHUB_WORKSPACE/build --config Release --target chia_plot -- -j 6
          ls $GITHUB_WORKSPACE/build/ -al
          echo "::set-output name=exec_path::$GITHUB_WORKSPACE/build/chia_plot"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ${{ steps.build.outputs.exec_path }}
          asset_name: chia_plot
          asset_content_type: application/excutable

#  build-for-Windows:
#     # The type of runner that the job will run on
#     runs-on: windows-latest

#     # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
#     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#     - uses: actions/checkout@v2
#     - name: Installing utilities
#       run: |
#           winget install libgmp3-dev
